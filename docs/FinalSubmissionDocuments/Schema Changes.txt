SCHEMA CHANGES

1. Users
We made a small change to users, adding is_admin as a boolean field.
This was not so much a change as an oversight, as we forgot to include a way to recognize administrators in our initial schema.

2. F_Teams
We added a unique id to each record in f_teams, as using the name as part of the primary key (that would need to be passed around in php and javascript functions) resulted in a limitation of the characters that could be used in team names (for example, no quotes) which would disrupt a userâ€™s creativity when choosing a team name.
Changing the primary key of f_teams also resulted in a change to player_assignments, given that it must store the primary key of an f_team.

3. Season_records
We removed the season_records table, which was originally designed to store the stats accumulated by a player while playing for a given fantasy team. However, having both this and plays_for (which stored the stats for a player and an nhl_team) was a source of redundancy. We removed season_records, and instead shifted the burden of storing the relationship between players and f_teams to player_assignments, and we could compute a players stats for his respective f_teams by performing a join on player_assignments, players, and plays_for.

4. Manages
Finally, we added a table to store the managers of leagues. This was once again simply an oversight in our original schema.

5. Prospects
We removed the prospects table, as we decided to focus our application onto only active NHL players for time reasons.

6. nhl_divisions
We added the nhl_divisions table (and a foreign key referencing it in nhl_teams) so that we could report not only on the team a player plays for, but also the division they are in, as this provides important context for a player's statistics.
